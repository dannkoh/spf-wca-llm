; Combined SMT for checking equivalence
; Original constants:
(declare-const in20 Int)
(declare-const in22 Int)
(declare-const in21 Int)
(declare-const in24 Int)
(declare-const in23 Int)
(declare-const in26 Int)
(declare-const in25 Int)
(declare-const in28 Int)
(declare-const in27 Int)
(declare-const in0 Int)
(declare-const in2 Int)
(declare-const in1 Int)
(declare-const in4 Int)
(declare-const in3 Int)
(declare-const in6 Int)
(declare-const in5 Int)
(declare-const in8 Int)
(declare-const in7 Int)
(declare-const in11 Int)
(declare-const in10 Int)
(declare-const in9 Int)
(declare-const in13 Int)
(declare-const in12 Int)
(declare-const in15 Int)
(declare-const in14 Int)
(declare-const in17 Int)
(declare-const in16 Int)
(declare-const in19 Int)
(declare-const in18 Int)

; Original constraints (A):
(push)
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and  ( =  in0 120)  ( =  in1 120))  ( =  in2 120))  ( =  in3 120))  ( =  in4 120))  ( =  in5 120))  ( =  in6 120))  ( =  in7 120))  ( =  in8 120))  ( =  in9 120))  ( =  in10 120))  ( =  in11 120))  ( =  in12 120))  ( =  in13 120))  ( =  in14 120))  ( =  in15 120))  ( =  in16 120))  ( =  in17 120))  ( =  in18 120))  ( =  in19 120))  ( =  in20 120))  ( =  in21 120))  ( =  in22 120))  ( =  in23 120))  ( =  in24 120))  ( =  in25 120))  ( =  in26 120))  ( =  in27 120))  ( =  in28 120)))
(pop)

; Generated constraints (B):
(push)
(assert (and (= in0 120)and (= in1 120)and (= in2 120)and (= in3 120)and (= in4 120)and (= in5 120)and (= in6 120)and (= in7 120)and (= in8 120)and (= in9 120)and (= in10 120)and (= in11 120)and (= in12 120)and (= in13 120)and (= in14 120)and (= in15 120)and (= in16 120)and (= in17 120)and (= in18 120)and (= in19 120)and (= in20 120)and (= in21 120)and (= in22 120)and (= in23 120)and (= in24 120)and (= in25 120)and (= in26 120)and (= in27 120)and (= in28 120)))
(pop)

; Now do two checks:
; 1) A => B fails means we push A and then (not B)
(push)
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and  ( =  in0 120)  ( =  in1 120))  ( =  in2 120))  ( =  in3 120))  ( =  in4 120))  ( =  in5 120))  ( =  in6 120))  ( =  in7 120))  ( =  in8 120))  ( =  in9 120))  ( =  in10 120))  ( =  in11 120))  ( =  in12 120))  ( =  in13 120))  ( =  in14 120))  ( =  in15 120))  ( =  in16 120))  ( =  in17 120))  ( =  in18 120))  ( =  in19 120))  ( =  in20 120))  ( =  in21 120))  ( =  in22 120))  ( =  in23 120))  ( =  in24 120))  ( =  in25 120))  ( =  in26 120))  ( =  in27 120))  ( =  in28 120)))
(assert (not
(and (and (= in0 120)and (= in1 120)and (= in2 120)and (= in3 120)and (= in4 120)and (= in5 120)and (= in6 120)and (= in7 120)and (= in8 120)and (= in9 120)and (= in10 120)and (= in11 120)and (= in12 120)and (= in13 120)and (= in14 120)and (= in15 120)and (= in16 120)and (= in17 120)and (= in18 120)and (= in19 120)and (= in20 120)and (= in21 120)and (= in22 120)and (= in23 120)and (= in24 120)and (= in25 120)and (= in26 120)and (= in27 120)and (= in28 120)))
))
(check-sat)
(pop)

; 2) B => A fails means we push B and then (not A)
(push)
(assert (and (= in0 120)and (= in1 120)and (= in2 120)and (= in3 120)and (= in4 120)and (= in5 120)and (= in6 120)and (= in7 120)and (= in8 120)and (= in9 120)and (= in10 120)and (= in11 120)and (= in12 120)and (= in13 120)and (= in14 120)and (= in15 120)and (= in16 120)and (= in17 120)and (= in18 120)and (= in19 120)and (= in20 120)and (= in21 120)and (= in22 120)and (= in23 120)and (= in24 120)and (= in25 120)and (= in26 120)and (= in27 120)and (= in28 120)))
(assert (not
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and  ( =  in0 120)  ( =  in1 120))  ( =  in2 120))  ( =  in3 120))  ( =  in4 120))  ( =  in5 120))  ( =  in6 120))  ( =  in7 120))  ( =  in8 120))  ( =  in9 120))  ( =  in10 120))  ( =  in11 120))  ( =  in12 120))  ( =  in13 120))  ( =  in14 120))  ( =  in15 120))  ( =  in16 120))  ( =  in17 120))  ( =  in18 120))  ( =  in19 120))  ( =  in20 120))  ( =  in21 120))  ( =  in22 120))  ( =  in23 120))  ( =  in24 120))  ( =  in25 120))  ( =  in26 120))  ( =  in27 120))  ( =  in28 120)))
))
(check-sat)
(pop)
