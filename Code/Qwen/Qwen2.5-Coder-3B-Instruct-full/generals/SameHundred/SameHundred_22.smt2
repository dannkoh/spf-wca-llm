; Combined SMT for checking equivalence
; Original constants:
(declare-const in0 Int)
(declare-const in2 Int)
(declare-const in1 Int)
(declare-const in4 Int)
(declare-const in3 Int)
(declare-const in6 Int)
(declare-const in5 Int)
(declare-const in20 Int)
(declare-const in8 Int)
(declare-const in7 Int)
(declare-const in11 Int)
(declare-const in21 Int)
(declare-const in10 Int)
(declare-const in9 Int)
(declare-const in13 Int)
(declare-const in12 Int)
(declare-const in15 Int)
(declare-const in14 Int)
(declare-const in17 Int)
(declare-const in16 Int)
(declare-const in19 Int)
(declare-const in18 Int)

; Original constraints (A):
(push)
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and  ( <  in0 100)  ( <  in1 100))  ( <  in2 100))  ( <  in3 100))  ( <  in4 100))  ( <  in5 100))  ( <  in6 100))  ( <  in7 100))  ( <  in8 100))  ( <  in9 100))  ( <  in10 100))  ( <  in11 100))  ( <  in12 100))  ( <  in13 100))  ( <  in14 100))  ( <  in15 100))  ( <  in16 100))  ( <  in17 100))  ( <  in18 100))  ( <  in19 100))  ( <  in20 100))  ( <  in21 100)))
(pop)

; Generated constraints (B):
(push)
(assert (<= 0 100))
(assert (>= 0 0))
(assert (<= 1 100))
(assert (>= 1 0))
(assert (<= 2 100))
(assert (>= 2 0))
(assert (<= 3 100))
(assert (>= 3 0))
(assert (<= 4 100))
(assert (>= 4 0))
(assert (<= 5 100))
(assert (>= 5 0))
(assert (<= 6 100))
(assert (>= 6 0))
(assert (<= 7 100))
(assert (>= 7 0))
(assert (<= 8 100))
(assert (>= 8 0))
(assert (<= 9 100))
(assert (>= 9 0))
(assert (<= 10 100))
(assert (>= 10 0))
(assert (<= 11 100))
(assert (>= 11 0))
(assert (<= 12 100))
(assert (>= 12 0))
(assert (<= 13 100))
(assert (>= 13 0))
(assert (<= 14 100))
(assert (>= 14 0))
(assert (<= 15 100))
(assert (>= 15 0))
(assert (<= 16 100))
(assert (>= 16 0))
(assert (<= 17 100))
(assert (>= 17 0))
(assert (<= 18 100))
(assert (>= 18 0))
(assert (<= 19 100))
(assert (>= 19 0))
(assert (<= 20 100))
(assert (>= 20 0))
(assert (<= 21 100))
(assert (>= 21 0))
(pop)

; Now do two checks:
; 1) A => B fails means we push A and then (not B)
(push)
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and  ( <  in0 100)  ( <  in1 100))  ( <  in2 100))  ( <  in3 100))  ( <  in4 100))  ( <  in5 100))  ( <  in6 100))  ( <  in7 100))  ( <  in8 100))  ( <  in9 100))  ( <  in10 100))  ( <  in11 100))  ( <  in12 100))  ( <  in13 100))  ( <  in14 100))  ( <  in15 100))  ( <  in16 100))  ( <  in17 100))  ( <  in18 100))  ( <  in19 100))  ( <  in20 100))  ( <  in21 100)))
(assert (not
(and (<= 0 100) (>= 0 0) (<= 1 100) (>= 1 0) (<= 2 100) (>= 2 0) (<= 3 100) (>= 3 0) (<= 4 100) (>= 4 0) (<= 5 100) (>= 5 0) (<= 6 100) (>= 6 0) (<= 7 100) (>= 7 0) (<= 8 100) (>= 8 0) (<= 9 100) (>= 9 0) (<= 10 100) (>= 10 0) (<= 11 100) (>= 11 0) (<= 12 100) (>= 12 0) (<= 13 100) (>= 13 0) (<= 14 100) (>= 14 0) (<= 15 100) (>= 15 0) (<= 16 100) (>= 16 0) (<= 17 100) (>= 17 0) (<= 18 100) (>= 18 0) (<= 19 100) (>= 19 0) (<= 20 100) (>= 20 0) (<= 21 100) (>= 21 0))
))
(check-sat)
(pop)

; 2) B => A fails means we push B and then (not A)
(push)
(assert (<= 0 100))
(assert (>= 0 0))
(assert (<= 1 100))
(assert (>= 1 0))
(assert (<= 2 100))
(assert (>= 2 0))
(assert (<= 3 100))
(assert (>= 3 0))
(assert (<= 4 100))
(assert (>= 4 0))
(assert (<= 5 100))
(assert (>= 5 0))
(assert (<= 6 100))
(assert (>= 6 0))
(assert (<= 7 100))
(assert (>= 7 0))
(assert (<= 8 100))
(assert (>= 8 0))
(assert (<= 9 100))
(assert (>= 9 0))
(assert (<= 10 100))
(assert (>= 10 0))
(assert (<= 11 100))
(assert (>= 11 0))
(assert (<= 12 100))
(assert (>= 12 0))
(assert (<= 13 100))
(assert (>= 13 0))
(assert (<= 14 100))
(assert (>= 14 0))
(assert (<= 15 100))
(assert (>= 15 0))
(assert (<= 16 100))
(assert (>= 16 0))
(assert (<= 17 100))
(assert (>= 17 0))
(assert (<= 18 100))
(assert (>= 18 0))
(assert (<= 19 100))
(assert (>= 19 0))
(assert (<= 20 100))
(assert (>= 20 0))
(assert (<= 21 100))
(assert (>= 21 0))
(assert (not
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and  ( <  in0 100)  ( <  in1 100))  ( <  in2 100))  ( <  in3 100))  ( <  in4 100))  ( <  in5 100))  ( <  in6 100))  ( <  in7 100))  ( <  in8 100))  ( <  in9 100))  ( <  in10 100))  ( <  in11 100))  ( <  in12 100))  ( <  in13 100))  ( <  in14 100))  ( <  in15 100))  ( <  in16 100))  ( <  in17 100))  ( <  in18 100))  ( <  in19 100))  ( <  in20 100))  ( <  in21 100)))
))
(check-sat)
(pop)
