; Combined SMT for checking equivalence
; Original constants:
(declare-const in7x8 Int)
(declare-const in7x9 Int)
(declare-const in7x6 Int)
(declare-const in12x4 Int)
(declare-const in7x0 Int)
(declare-const in12x5 Int)
(declare-const in7x1 Int)
(declare-const in12x2 Int)
(declare-const in6x11 Int)
(declare-const in12x3 Int)
(declare-const in6x10 Int)
(declare-const in12x8 Int)
(declare-const in7x4 Int)
(declare-const in12x9 Int)
(declare-const in7x5 Int)
(declare-const in12x6 Int)
(declare-const in7x2 Int)
(declare-const in12x7 Int)
(declare-const in7x3 Int)
(declare-const in6x13 Int)
(declare-const in6x12 Int)
(declare-const in6x14 Int)
(declare-const in11x0 Int)
(declare-const in11x2 Int)
(declare-const in11x1 Int)
(declare-const in1x10 Int)
(declare-const in12x13 Int)
(declare-const in12x14 Int)
(declare-const in1x14 Int)
(declare-const in12x11 Int)
(declare-const in1x13 Int)
(declare-const in1x12 Int)
(declare-const in12x10 Int)
(declare-const in1x11 Int)
(declare-const in0x14 Int)
(declare-const in8x7 Int)
(declare-const in8x5 Int)
(declare-const in8x6 Int)
(declare-const in8x9 Int)
(declare-const in13x3 Int)
(declare-const in0x7 Int)
(declare-const in13x4 Int)
(declare-const in8x0 Int)
(declare-const in0x8 Int)
(declare-const in13x1 Int)
(declare-const in0x5 Int)
(declare-const in13x2 Int)
(declare-const in0x6 Int)
(declare-const in13x7 Int)
(declare-const in8x3 Int)
(declare-const in13x8 Int)
(declare-const in8x4 Int)
(declare-const in13x5 Int)
(declare-const in0x9 Int)
(declare-const in8x1 Int)
(declare-const in13x6 Int)
(declare-const in8x2 Int)
(declare-const in13x9 Int)
(declare-const in0x12 Int)
(declare-const in0x3 Int)
(declare-const in0x13 Int)
(declare-const in0x4 Int)
(declare-const in0x10 Int)
(declare-const in0x1 Int)
(declare-const in0x11 Int)
(declare-const in0x2 Int)
(declare-const in12x0 Int)
(declare-const in12x1 Int)
(declare-const in9x6 Int)
(declare-const in9x7 Int)
(declare-const in9x4 Int)
(declare-const in9x5 Int)
(declare-const in9x8 Int)
(declare-const in10x5 Int)
(declare-const in1x6 Int)
(declare-const in10x4 Int)
(declare-const in1x7 Int)
(declare-const in10x7 Int)
(declare-const in1x4 Int)
(declare-const in10x6 Int)
(declare-const in1x5 Int)
(declare-const in10x9 Int)
(declare-const in9x2 Int)
(declare-const in10x8 Int)
(declare-const in9x3 Int)
(declare-const in9x0 Int)
(declare-const in1x8 Int)
(declare-const in9x1 Int)
(declare-const in1x9 Int)
(declare-const in11x13 Int)
(declare-const in2x11 Int)
(declare-const in11x12 Int)
(declare-const in2x10 Int)
(declare-const in11x14 Int)
(declare-const in1x2 Int)
(declare-const in2x14 Int)
(declare-const in1x3 Int)
(declare-const in2x13 Int)
(declare-const in1x0 Int)
(declare-const in2x12 Int)
(declare-const in11x10 Int)
(declare-const in11x4 Int)
(declare-const in2x5 Int)
(declare-const in11x3 Int)
(declare-const in2x6 Int)
(declare-const in11x6 Int)
(declare-const in2x3 Int)
(declare-const in11x5 Int)
(declare-const in2x4 Int)
(declare-const in11x8 Int)
(declare-const in2x9 Int)
(declare-const in11x7 Int)
(declare-const in2x7 Int)
(declare-const in11x9 Int)
(declare-const in2x8 Int)
(declare-const in2x1 Int)
(declare-const in2x0 Int)
(declare-const in10x1 Int)
(declare-const in10x0 Int)
(declare-const in10x3 Int)
(declare-const in10x2 Int)
(declare-const in7x10 Int)
(declare-const in7x12 Int)
(declare-const in7x11 Int)
(declare-const in10x12 Int)
(declare-const in10x11 Int)
(declare-const in10x14 Int)
(declare-const in10x13 Int)
(declare-const in7x14 Int)
(declare-const in7x13 Int)
(declare-const in3x4 Int)
(declare-const in3x5 Int)
(declare-const in3x2 Int)
(declare-const in3x8 Int)
(declare-const in3x9 Int)
(declare-const in3x6 Int)
(declare-const in3x7 Int)
(declare-const in3x0 Int)
(declare-const in3x1 Int)
(declare-const in9x13 Int)
(declare-const in9x14 Int)
(declare-const in9x11 Int)
(declare-const in9x12 Int)
(declare-const in9x10 Int)
(declare-const in4x9 Int)
(declare-const in8x12 Int)
(declare-const in4x3 Int)
(declare-const in8x13 Int)
(declare-const in8x10 Int)
(declare-const in4x1 Int)
(declare-const in8x11 Int)
(declare-const in4x2 Int)
(declare-const in4x7 Int)
(declare-const in4x8 Int)
(declare-const in4x5 Int)
(declare-const in4x6 Int)
(declare-const in4x0 Int)
(declare-const in8x14 Int)
(declare-const in14x10 Int)
(declare-const in3x12 Int)
(declare-const in3x11 Int)
(declare-const in3x10 Int)
(declare-const in14x13 Int)
(declare-const in14x12 Int)
(declare-const in3x14 Int)
(declare-const in14x11 Int)
(declare-const in3x13 Int)
(declare-const in5x8 Int)
(declare-const in5x9 Int)
(declare-const in14x2 Int)
(declare-const in5x2 Int)
(declare-const in14x3 Int)
(declare-const in5x3 Int)
(declare-const in14x0 Int)
(declare-const in5x0 Int)
(declare-const in14x1 Int)
(declare-const in5x1 Int)
(declare-const in14x6 Int)
(declare-const in5x6 Int)
(declare-const in14x7 Int)
(declare-const in5x7 Int)
(declare-const in14x4 Int)
(declare-const in5x4 Int)
(declare-const in14x5 Int)
(declare-const in14x8 Int)
(declare-const in14x9 Int)
(declare-const in13x0 Int)
(declare-const in5x10 Int)
(declare-const in5x11 Int)
(declare-const in5x12 Int)
(declare-const in5x13 Int)
(declare-const in5x14 Int)
(declare-const in6x9 Int)
(declare-const in6x7 Int)
(declare-const in6x8 Int)
(declare-const in6x1 Int)
(declare-const in6x2 Int)
(declare-const in6x0 Int)
(declare-const in6x5 Int)
(declare-const in6x3 Int)
(declare-const in6x4 Int)
(declare-const in4x14 Int)
(declare-const in13x14 Int)
(declare-const in13x12 Int)
(declare-const in4x10 Int)
(declare-const in4x11 Int)
(declare-const in13x10 Int)
(declare-const in4x12 Int)
(declare-const in13x11 Int)
(declare-const in4x13 Int)

; Original constraints (A):
(push)
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and  ( =  in1x0 in0x1)  ( =  in2x0 in0x2))  ( =  in2x1 in1x2))  ( =  in3x0 in0x3))  ( =  in3x1 in1x3))  ( =  in3x2 in2x3))  ( =  in4x0 in0x4))  ( =  in4x1 in1x4))  ( =  in4x2 in2x4))  ( =  in4x3 in3x4))  ( =  in5x0 in0x5))  ( =  in5x1 in1x5))  ( =  in5x2 in2x5))  ( =  in5x3 in3x5))  ( =  in5x4 in4x5))  ( =  in6x0 in0x6))  ( =  in6x1 in1x6))  ( =  in6x2 in2x6))  ( =  in6x3 in3x6))  ( =  in6x4 in4x6))  ( =  in6x5 in5x6))  ( =  in7x0 in0x7))  ( =  in7x1 in1x7))  ( =  in7x2 in2x7))  ( =  in7x3 in3x7))  ( =  in7x4 in4x7))  ( =  in7x5 in5x7))  ( =  in7x6 in6x7))  ( =  in8x0 in0x8))  ( =  in8x1 in1x8))  ( =  in8x2 in2x8))  ( =  in8x3 in3x8))  ( =  in8x4 in4x8))  ( =  in8x5 in5x8))  ( =  in8x6 in6x8))  ( =  in8x7 in7x8))  ( =  in9x0 in0x9))  ( =  in9x1 in1x9))  ( =  in9x2 in2x9))  ( =  in9x3 in3x9))  ( =  in9x4 in4x9))  ( =  in9x5 in5x9))  ( =  in9x6 in6x9))  ( =  in9x7 in7x9))  ( =  in9x8 in8x9))  ( =  in10x0 in0x10))  ( =  in10x1 in1x10))  ( =  in10x2 in2x10))  ( =  in10x3 in3x10))  ( =  in10x4 in4x10))  ( =  in10x5 in5x10))  ( =  in10x6 in6x10))  ( =  in10x7 in7x10))  ( =  in10x8 in8x10))  ( =  in10x9 in9x10))  ( =  in11x0 in0x11))  ( =  in11x1 in1x11))  ( =  in11x2 in2x11))  ( =  in11x3 in3x11))  ( =  in11x4 in4x11))  ( =  in11x5 in5x11))  ( =  in11x6 in6x11))  ( =  in11x7 in7x11))  ( =  in11x8 in8x11))  ( =  in11x9 in9x11))  ( =  in11x10 in10x11))  ( =  in12x0 in0x12))  ( =  in12x1 in1x12))  ( =  in12x2 in2x12))  ( =  in12x3 in3x12))  ( =  in12x4 in4x12))  ( =  in12x5 in5x12))  ( =  in12x6 in6x12))  ( =  in12x7 in7x12))  ( =  in12x8 in8x12))  ( =  in12x9 in9x12))  ( =  in12x10 in10x12))  ( =  in12x11 in11x12))  ( =  in13x0 in0x13))  ( =  in13x1 in1x13))  ( =  in13x2 in2x13))  ( =  in13x3 in3x13))  ( =  in13x4 in4x13))  ( =  in13x5 in5x13))  ( =  in13x6 in6x13))  ( =  in13x7 in7x13))  ( =  in13x8 in8x13))  ( =  in13x9 in9x13))  ( =  in13x10 in10x13))  ( =  in13x11 in11x13))  ( =  in13x12 in12x13))  ( =  in14x0 in0x14))  ( =  in14x1 in1x14))  ( =  in14x2 in2x14))  ( =  in14x3 in3x14))  ( =  in14x4 in4x14))  ( =  in14x5 in5x14))  ( =  in14x6 in6x14))  ( =  in14x7 in7x14))  ( =  in14x8 in8x14))  ( =  in14x9 in9x14))  ( =  in14x10 in10x14))  ( =  in14x11 in11x14))  ( =  in14x12 in12x14))  ( =  in14x13 in13x14)))
(pop)

; Generated constraints (B):
(push)
(assert (= in1x1 100)   ;; Constant upper limit for N = 15
(assert (<= in2x1 in2x0)
(assert (= in2x2 100)   ;; Constant upper limit for N = 15
(assert (<= in3x1 in3x0)
(assert (<= in3x2 in3x1)
(assert (= in3x3 100)   ;; Constant upper limit for N = 15
(assert (<= in4x1 in4x0)
(assert (<= in4x2 in4x1)
(assert (<= in4x3 in4x2)
(assert (= in4x4 100)   ;; Constant upper limit for N = 15
(assert (<= in5x1 in5x0)
(assert (<= in5x2 in5x1)
(assert (<= in5x3 in5x2)
(assert (<= in5x4 in5x3)
(assert (= in5x5 100)   ;; Constant upper limit for N = 15
(assert (<= in6x1 in6x0)
(assert (<= in6x2 in6x1)
(assert (<= in6x3 in6x2)
(assert (<= in6x4 in6x3)
(assert (<= in6x5 in6x4)
(assert (= in6x6 100)   ;; Constant upper limit for N = 15
(assert (<= in7x1 in7x0)
(assert (<= in7x2 in7x1)
(assert (<= in7x3 in7x2)
(assert (<= in7x4 in7x3)
(assert (<= in7x5 in7x4)
(assert (<= in7x6 in7x5)
(assert (= in7x7 100)   ;; Constant upper limit for N = 15
(assert (<= in8x1 in8x0)
(assert (<= in8x2 in8x1)
(assert (<= in8x3 in8x2)
(assert (<= in8x4 in8x3)
(assert (<= in8x5 in8x4)
(assert (<= in8x6 in8x5)
(assert (<= in8x7 in8x6)
(assert (= in8x8 100)   ;; Constant upper limit for N = 15
(assert (<= in9x1 in9x0)
(assert (<= in9x2 in9x1)
(assert (<= in9x3 in9x2)
(assert (<= in9x4 in9x3)
(assert (<= in9x5 in9x4)
(assert (<= in9x6 in9x5)
(assert (<= in9x7 in9x6)
(assert (<= in9x8 in9x7)
(assert (= in9x9 100)   ;; Constant upper limit for N = 15
(assert (<= in10x1 in10x0)
(assert (<= in10x2 in10x1)
(assert (<= in10x3 in10x2)
(assert (<= in10x4 in10x3)
(assert (<= in10x5 in10x4)
(assert (<= in10x6 in10x5)
(assert (<= in10x7 in10x6)
(assert (<= in10x8 in10x7)
(assert (<= in10x9 in10x8)
(assert (= in10x10 100)   ;; Constant upper limit for N = 15
(assert (<= in11x1 in11x0)
(assert (<= in11x2 in11x1)
(assert (<= in11x3 in11x2)
(assert (<= in11x4 in11x3)
(assert (<= in11x5 in11x4)
(assert (<= in11x6 in11x5)
(assert (<= in11x7 in11x6)
(assert (<= in11x8 in11x7)
(assert (<= in11x9 in11x8)
(assert (<= in11x10 in11x9)
(assert (= in11x11 100)   ;; Constant upper limit for N = 15
(assert (<= in12x1 in12x0)
(assert (<= in12x2 in12x1)
(assert (<= in12x3 in12x2)
(assert (<= in12x4 in12x3)
(assert (<= in12x5 in12x4)
(assert (<= in12x6 in12x5)
(assert (<= in12x7 in12x6)
(assert (<= in12x8 in12x7)
(assert (<= in12x9 in12x8)
(assert (<= in12x10 in12x9)
(assert (<= in12x11 in12x10)
(assert (= in12x12 100)   ;; Constant upper limit for N = 15
(assert (<= in13x1 in13x0)
(assert (<= in13x2 in13x1)
(assert (<= in13x3 in13x2)
(assert (<= in13x4 in13x3)
(assert (<= in13x5 in13x4)
(assert (<= in13x6 in13x5)
(assert (<= in13x7 in13x6)
(assert (<= in13x8 in13x7)
(assert (<= in13x9 in13x8)
(assert (<= in13x10 in13x9)
(assert (<= in13x11 in13x10)
(assert (<= in13x12 in13x11)
(assert (= in13x13 100)   ;; Constant upper limit for N = 15
(assert (<= in14x1 in14x0)
(assert (<= in14x2 in14x1)
(assert (<= in14x3 in14x2)
(assert (<= in14x4 in14x3)
(assert (<= in14x5 in14x4)
(assert (<= in14x6 in14x5)
(assert (<= in14x7 in14x6)
(assert (<= in14x8 in14x7)
(assert (<= in14x9 in14x8)
(assert (<= in14x10 in14x9)
(assert (<= in14x11 in14x10)
(assert (<= in14x12 in14x11)
(assert (<= in14x13 in14x12)
(assert (= in14x14 100)   ;; Constant upper limit for N = 15
(assert (<= in15x1 in15x0)
(assert (<= in15x2 in15x1)
(assert (<= in15x3 in15x2)
(assert (<= in15x4 in15x3)
(assert (<= in15x5 in15x4)
(assert (<= in15x6 in15x5)
(assert (<= in15x7 in15x6)
(assert (<= in15x8 in15x7)
(assert (<= in15x9 in15x8)
(assert (<= in15x10 in15x9)
(assert (<= in15x11 in15x10)
(assert (<= in15x12 in15x11)
(assert (<= in15x13 in15x12)
(assert (<= in15x14 in15x13)
(assert (= in15x15 100)   ;; Constant upper limit for N = 15
(pop)

; Now do two checks:
; 1) A => B fails means we push A and then (not B)
(push)
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and  ( =  in1x0 in0x1)  ( =  in2x0 in0x2))  ( =  in2x1 in1x2))  ( =  in3x0 in0x3))  ( =  in3x1 in1x3))  ( =  in3x2 in2x3))  ( =  in4x0 in0x4))  ( =  in4x1 in1x4))  ( =  in4x2 in2x4))  ( =  in4x3 in3x4))  ( =  in5x0 in0x5))  ( =  in5x1 in1x5))  ( =  in5x2 in2x5))  ( =  in5x3 in3x5))  ( =  in5x4 in4x5))  ( =  in6x0 in0x6))  ( =  in6x1 in1x6))  ( =  in6x2 in2x6))  ( =  in6x3 in3x6))  ( =  in6x4 in4x6))  ( =  in6x5 in5x6))  ( =  in7x0 in0x7))  ( =  in7x1 in1x7))  ( =  in7x2 in2x7))  ( =  in7x3 in3x7))  ( =  in7x4 in4x7))  ( =  in7x5 in5x7))  ( =  in7x6 in6x7))  ( =  in8x0 in0x8))  ( =  in8x1 in1x8))  ( =  in8x2 in2x8))  ( =  in8x3 in3x8))  ( =  in8x4 in4x8))  ( =  in8x5 in5x8))  ( =  in8x6 in6x8))  ( =  in8x7 in7x8))  ( =  in9x0 in0x9))  ( =  in9x1 in1x9))  ( =  in9x2 in2x9))  ( =  in9x3 in3x9))  ( =  in9x4 in4x9))  ( =  in9x5 in5x9))  ( =  in9x6 in6x9))  ( =  in9x7 in7x9))  ( =  in9x8 in8x9))  ( =  in10x0 in0x10))  ( =  in10x1 in1x10))  ( =  in10x2 in2x10))  ( =  in10x3 in3x10))  ( =  in10x4 in4x10))  ( =  in10x5 in5x10))  ( =  in10x6 in6x10))  ( =  in10x7 in7x10))  ( =  in10x8 in8x10))  ( =  in10x9 in9x10))  ( =  in11x0 in0x11))  ( =  in11x1 in1x11))  ( =  in11x2 in2x11))  ( =  in11x3 in3x11))  ( =  in11x4 in4x11))  ( =  in11x5 in5x11))  ( =  in11x6 in6x11))  ( =  in11x7 in7x11))  ( =  in11x8 in8x11))  ( =  in11x9 in9x11))  ( =  in11x10 in10x11))  ( =  in12x0 in0x12))  ( =  in12x1 in1x12))  ( =  in12x2 in2x12))  ( =  in12x3 in3x12))  ( =  in12x4 in4x12))  ( =  in12x5 in5x12))  ( =  in12x6 in6x12))  ( =  in12x7 in7x12))  ( =  in12x8 in8x12))  ( =  in12x9 in9x12))  ( =  in12x10 in10x12))  ( =  in12x11 in11x12))  ( =  in13x0 in0x13))  ( =  in13x1 in1x13))  ( =  in13x2 in2x13))  ( =  in13x3 in3x13))  ( =  in13x4 in4x13))  ( =  in13x5 in5x13))  ( =  in13x6 in6x13))  ( =  in13x7 in7x13))  ( =  in13x8 in8x13))  ( =  in13x9 in9x13))  ( =  in13x10 in10x13))  ( =  in13x11 in11x13))  ( =  in13x12 in12x13))  ( =  in14x0 in0x14))  ( =  in14x1 in1x14))  ( =  in14x2 in2x14))  ( =  in14x3 in3x14))  ( =  in14x4 in4x14))  ( =  in14x5 in5x14))  ( =  in14x6 in6x14))  ( =  in14x7 in7x14))  ( =  in14x8 in8x14))  ( =  in14x9 in9x14))  ( =  in14x10 in10x14))  ( =  in14x11 in11x14))  ( =  in14x12 in12x14))  ( =  in14x13 in13x14)))
(assert (not
(and (= in1x1 100)   ;; Constant upper limit for N = 1 (<= in2x1 in2x0 (= in2x2 100)   ;; Constant upper limit for N = 1 (<= in3x1 in3x0 (<= in3x2 in3x1 (= in3x3 100)   ;; Constant upper limit for N = 1 (<= in4x1 in4x0 (<= in4x2 in4x1 (<= in4x3 in4x2 (= in4x4 100)   ;; Constant upper limit for N = 1 (<= in5x1 in5x0 (<= in5x2 in5x1 (<= in5x3 in5x2 (<= in5x4 in5x3 (= in5x5 100)   ;; Constant upper limit for N = 1 (<= in6x1 in6x0 (<= in6x2 in6x1 (<= in6x3 in6x2 (<= in6x4 in6x3 (<= in6x5 in6x4 (= in6x6 100)   ;; Constant upper limit for N = 1 (<= in7x1 in7x0 (<= in7x2 in7x1 (<= in7x3 in7x2 (<= in7x4 in7x3 (<= in7x5 in7x4 (<= in7x6 in7x5 (= in7x7 100)   ;; Constant upper limit for N = 1 (<= in8x1 in8x0 (<= in8x2 in8x1 (<= in8x3 in8x2 (<= in8x4 in8x3 (<= in8x5 in8x4 (<= in8x6 in8x5 (<= in8x7 in8x6 (= in8x8 100)   ;; Constant upper limit for N = 1 (<= in9x1 in9x0 (<= in9x2 in9x1 (<= in9x3 in9x2 (<= in9x4 in9x3 (<= in9x5 in9x4 (<= in9x6 in9x5 (<= in9x7 in9x6 (<= in9x8 in9x7 (= in9x9 100)   ;; Constant upper limit for N = 1 (<= in10x1 in10x0 (<= in10x2 in10x1 (<= in10x3 in10x2 (<= in10x4 in10x3 (<= in10x5 in10x4 (<= in10x6 in10x5 (<= in10x7 in10x6 (<= in10x8 in10x7 (<= in10x9 in10x8 (= in10x10 100)   ;; Constant upper limit for N = 1 (<= in11x1 in11x0 (<= in11x2 in11x1 (<= in11x3 in11x2 (<= in11x4 in11x3 (<= in11x5 in11x4 (<= in11x6 in11x5 (<= in11x7 in11x6 (<= in11x8 in11x7 (<= in11x9 in11x8 (<= in11x10 in11x9 (= in11x11 100)   ;; Constant upper limit for N = 1 (<= in12x1 in12x0 (<= in12x2 in12x1 (<= in12x3 in12x2 (<= in12x4 in12x3 (<= in12x5 in12x4 (<= in12x6 in12x5 (<= in12x7 in12x6 (<= in12x8 in12x7 (<= in12x9 in12x8 (<= in12x10 in12x9 (<= in12x11 in12x10 (= in12x12 100)   ;; Constant upper limit for N = 1 (<= in13x1 in13x0 (<= in13x2 in13x1 (<= in13x3 in13x2 (<= in13x4 in13x3 (<= in13x5 in13x4 (<= in13x6 in13x5 (<= in13x7 in13x6 (<= in13x8 in13x7 (<= in13x9 in13x8 (<= in13x10 in13x9 (<= in13x11 in13x10 (<= in13x12 in13x11 (= in13x13 100)   ;; Constant upper limit for N = 1 (<= in14x1 in14x0 (<= in14x2 in14x1 (<= in14x3 in14x2 (<= in14x4 in14x3 (<= in14x5 in14x4 (<= in14x6 in14x5 (<= in14x7 in14x6 (<= in14x8 in14x7 (<= in14x9 in14x8 (<= in14x10 in14x9 (<= in14x11 in14x10 (<= in14x12 in14x11 (<= in14x13 in14x12 (= in14x14 100)   ;; Constant upper limit for N = 1 (<= in15x1 in15x0 (<= in15x2 in15x1 (<= in15x3 in15x2 (<= in15x4 in15x3 (<= in15x5 in15x4 (<= in15x6 in15x5 (<= in15x7 in15x6 (<= in15x8 in15x7 (<= in15x9 in15x8 (<= in15x10 in15x9 (<= in15x11 in15x10 (<= in15x12 in15x11 (<= in15x13 in15x12 (<= in15x14 in15x13 (= in15x15 100)   ;; Constant upper limit for N = 1)
))
(check-sat)
(pop)

; 2) B => A fails means we push B and then (not A)
(push)
(assert (= in1x1 100)   ;; Constant upper limit for N = 15
(assert (<= in2x1 in2x0)
(assert (= in2x2 100)   ;; Constant upper limit for N = 15
(assert (<= in3x1 in3x0)
(assert (<= in3x2 in3x1)
(assert (= in3x3 100)   ;; Constant upper limit for N = 15
(assert (<= in4x1 in4x0)
(assert (<= in4x2 in4x1)
(assert (<= in4x3 in4x2)
(assert (= in4x4 100)   ;; Constant upper limit for N = 15
(assert (<= in5x1 in5x0)
(assert (<= in5x2 in5x1)
(assert (<= in5x3 in5x2)
(assert (<= in5x4 in5x3)
(assert (= in5x5 100)   ;; Constant upper limit for N = 15
(assert (<= in6x1 in6x0)
(assert (<= in6x2 in6x1)
(assert (<= in6x3 in6x2)
(assert (<= in6x4 in6x3)
(assert (<= in6x5 in6x4)
(assert (= in6x6 100)   ;; Constant upper limit for N = 15
(assert (<= in7x1 in7x0)
(assert (<= in7x2 in7x1)
(assert (<= in7x3 in7x2)
(assert (<= in7x4 in7x3)
(assert (<= in7x5 in7x4)
(assert (<= in7x6 in7x5)
(assert (= in7x7 100)   ;; Constant upper limit for N = 15
(assert (<= in8x1 in8x0)
(assert (<= in8x2 in8x1)
(assert (<= in8x3 in8x2)
(assert (<= in8x4 in8x3)
(assert (<= in8x5 in8x4)
(assert (<= in8x6 in8x5)
(assert (<= in8x7 in8x6)
(assert (= in8x8 100)   ;; Constant upper limit for N = 15
(assert (<= in9x1 in9x0)
(assert (<= in9x2 in9x1)
(assert (<= in9x3 in9x2)
(assert (<= in9x4 in9x3)
(assert (<= in9x5 in9x4)
(assert (<= in9x6 in9x5)
(assert (<= in9x7 in9x6)
(assert (<= in9x8 in9x7)
(assert (= in9x9 100)   ;; Constant upper limit for N = 15
(assert (<= in10x1 in10x0)
(assert (<= in10x2 in10x1)
(assert (<= in10x3 in10x2)
(assert (<= in10x4 in10x3)
(assert (<= in10x5 in10x4)
(assert (<= in10x6 in10x5)
(assert (<= in10x7 in10x6)
(assert (<= in10x8 in10x7)
(assert (<= in10x9 in10x8)
(assert (= in10x10 100)   ;; Constant upper limit for N = 15
(assert (<= in11x1 in11x0)
(assert (<= in11x2 in11x1)
(assert (<= in11x3 in11x2)
(assert (<= in11x4 in11x3)
(assert (<= in11x5 in11x4)
(assert (<= in11x6 in11x5)
(assert (<= in11x7 in11x6)
(assert (<= in11x8 in11x7)
(assert (<= in11x9 in11x8)
(assert (<= in11x10 in11x9)
(assert (= in11x11 100)   ;; Constant upper limit for N = 15
(assert (<= in12x1 in12x0)
(assert (<= in12x2 in12x1)
(assert (<= in12x3 in12x2)
(assert (<= in12x4 in12x3)
(assert (<= in12x5 in12x4)
(assert (<= in12x6 in12x5)
(assert (<= in12x7 in12x6)
(assert (<= in12x8 in12x7)
(assert (<= in12x9 in12x8)
(assert (<= in12x10 in12x9)
(assert (<= in12x11 in12x10)
(assert (= in12x12 100)   ;; Constant upper limit for N = 15
(assert (<= in13x1 in13x0)
(assert (<= in13x2 in13x1)
(assert (<= in13x3 in13x2)
(assert (<= in13x4 in13x3)
(assert (<= in13x5 in13x4)
(assert (<= in13x6 in13x5)
(assert (<= in13x7 in13x6)
(assert (<= in13x8 in13x7)
(assert (<= in13x9 in13x8)
(assert (<= in13x10 in13x9)
(assert (<= in13x11 in13x10)
(assert (<= in13x12 in13x11)
(assert (= in13x13 100)   ;; Constant upper limit for N = 15
(assert (<= in14x1 in14x0)
(assert (<= in14x2 in14x1)
(assert (<= in14x3 in14x2)
(assert (<= in14x4 in14x3)
(assert (<= in14x5 in14x4)
(assert (<= in14x6 in14x5)
(assert (<= in14x7 in14x6)
(assert (<= in14x8 in14x7)
(assert (<= in14x9 in14x8)
(assert (<= in14x10 in14x9)
(assert (<= in14x11 in14x10)
(assert (<= in14x12 in14x11)
(assert (<= in14x13 in14x12)
(assert (= in14x14 100)   ;; Constant upper limit for N = 15
(assert (<= in15x1 in15x0)
(assert (<= in15x2 in15x1)
(assert (<= in15x3 in15x2)
(assert (<= in15x4 in15x3)
(assert (<= in15x5 in15x4)
(assert (<= in15x6 in15x5)
(assert (<= in15x7 in15x6)
(assert (<= in15x8 in15x7)
(assert (<= in15x9 in15x8)
(assert (<= in15x10 in15x9)
(assert (<= in15x11 in15x10)
(assert (<= in15x12 in15x11)
(assert (<= in15x13 in15x12)
(assert (<= in15x14 in15x13)
(assert (= in15x15 100)   ;; Constant upper limit for N = 15
(assert (not
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and  ( =  in1x0 in0x1)  ( =  in2x0 in0x2))  ( =  in2x1 in1x2))  ( =  in3x0 in0x3))  ( =  in3x1 in1x3))  ( =  in3x2 in2x3))  ( =  in4x0 in0x4))  ( =  in4x1 in1x4))  ( =  in4x2 in2x4))  ( =  in4x3 in3x4))  ( =  in5x0 in0x5))  ( =  in5x1 in1x5))  ( =  in5x2 in2x5))  ( =  in5x3 in3x5))  ( =  in5x4 in4x5))  ( =  in6x0 in0x6))  ( =  in6x1 in1x6))  ( =  in6x2 in2x6))  ( =  in6x3 in3x6))  ( =  in6x4 in4x6))  ( =  in6x5 in5x6))  ( =  in7x0 in0x7))  ( =  in7x1 in1x7))  ( =  in7x2 in2x7))  ( =  in7x3 in3x7))  ( =  in7x4 in4x7))  ( =  in7x5 in5x7))  ( =  in7x6 in6x7))  ( =  in8x0 in0x8))  ( =  in8x1 in1x8))  ( =  in8x2 in2x8))  ( =  in8x3 in3x8))  ( =  in8x4 in4x8))  ( =  in8x5 in5x8))  ( =  in8x6 in6x8))  ( =  in8x7 in7x8))  ( =  in9x0 in0x9))  ( =  in9x1 in1x9))  ( =  in9x2 in2x9))  ( =  in9x3 in3x9))  ( =  in9x4 in4x9))  ( =  in9x5 in5x9))  ( =  in9x6 in6x9))  ( =  in9x7 in7x9))  ( =  in9x8 in8x9))  ( =  in10x0 in0x10))  ( =  in10x1 in1x10))  ( =  in10x2 in2x10))  ( =  in10x3 in3x10))  ( =  in10x4 in4x10))  ( =  in10x5 in5x10))  ( =  in10x6 in6x10))  ( =  in10x7 in7x10))  ( =  in10x8 in8x10))  ( =  in10x9 in9x10))  ( =  in11x0 in0x11))  ( =  in11x1 in1x11))  ( =  in11x2 in2x11))  ( =  in11x3 in3x11))  ( =  in11x4 in4x11))  ( =  in11x5 in5x11))  ( =  in11x6 in6x11))  ( =  in11x7 in7x11))  ( =  in11x8 in8x11))  ( =  in11x9 in9x11))  ( =  in11x10 in10x11))  ( =  in12x0 in0x12))  ( =  in12x1 in1x12))  ( =  in12x2 in2x12))  ( =  in12x3 in3x12))  ( =  in12x4 in4x12))  ( =  in12x5 in5x12))  ( =  in12x6 in6x12))  ( =  in12x7 in7x12))  ( =  in12x8 in8x12))  ( =  in12x9 in9x12))  ( =  in12x10 in10x12))  ( =  in12x11 in11x12))  ( =  in13x0 in0x13))  ( =  in13x1 in1x13))  ( =  in13x2 in2x13))  ( =  in13x3 in3x13))  ( =  in13x4 in4x13))  ( =  in13x5 in5x13))  ( =  in13x6 in6x13))  ( =  in13x7 in7x13))  ( =  in13x8 in8x13))  ( =  in13x9 in9x13))  ( =  in13x10 in10x13))  ( =  in13x11 in11x13))  ( =  in13x12 in12x13))  ( =  in14x0 in0x14))  ( =  in14x1 in1x14))  ( =  in14x2 in2x14))  ( =  in14x3 in3x14))  ( =  in14x4 in4x14))  ( =  in14x5 in5x14))  ( =  in14x6 in6x14))  ( =  in14x7 in7x14))  ( =  in14x8 in8x14))  ( =  in14x9 in9x14))  ( =  in14x10 in10x14))  ( =  in14x11 in11x14))  ( =  in14x12 in12x14))  ( =  in14x13 in13x14)))
))
(check-sat)
(pop)
